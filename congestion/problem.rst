Vấn đề: Phân bổ Tài nguyên
--------------------------

Đến thời điểm này, chúng ta đã tìm hiểu đủ các lớp của hệ phân cấp giao thức mạng để hiểu cách dữ liệu có thể được truyền giữa các tiến trình qua các mạng không đồng nhất. Bây giờ, chúng ta chuyển sang một vấn đề bao trùm toàn bộ ngăn xếp giao thức—làm thế nào để phân bổ tài nguyên một cách hiệu quả và công bằng giữa một tập hợp người dùng cạnh tranh nhau. Các tài nguyên được chia sẻ bao gồm băng thông của các liên kết và bộ đệm trên các bộ định tuyến hoặc chuyển mạch, nơi các gói tin được xếp hàng chờ truyền đi. Các gói tin *cạnh tranh* tại một bộ định tuyến để sử dụng một liên kết, với mỗi gói cạnh tranh được đặt vào một hàng đợi chờ đến lượt mình được truyền qua liên kết đó. Khi có quá nhiều gói tin cùng cạnh tranh cho một liên kết, hàng đợi sẽ đầy và hai điều không mong muốn xảy ra: các gói tin sẽ bị tăng độ trễ đầu-cuối, và trong trường hợp xấu nhất, hàng đợi bị tràn và các gói tin phải bị loại bỏ. Khi các hàng đợi dài kéo dài và việc loại bỏ gói tin trở nên phổ biến, mạng được gọi là bị *tắc nghẽn*. Hầu hết các mạng đều cung cấp một cơ chế *kiểm soát tắc nghẽn* để xử lý tình huống như vậy.

Kiểm soát tắc nghẽn và phân bổ tài nguyên là hai mặt của cùng một vấn đề. Một mặt, nếu mạng đóng vai trò chủ động trong việc phân bổ tài nguyên—ví dụ, lên lịch cho mạch ảo nào được sử dụng một liên kết vật lý nhất định trong một khoảng thời gian nhất định—thì tắc nghẽn có thể được tránh, nhờ đó làm cho kiểm soát tắc nghẽn trở nên không cần thiết. Tuy nhiên, việc phân bổ tài nguyên mạng một cách chính xác là rất khó, bởi vì các tài nguyên này được phân tán khắp mạng; nhiều liên kết kết nối một chuỗi các bộ định tuyến cần được lên lịch. Mặt khác, bạn luôn có thể để các nguồn phát gói tin gửi bao nhiêu dữ liệu tùy thích và sau đó xử lý tắc nghẽn nếu nó xảy ra. Đây là cách tiếp cận dễ dàng hơn, nhưng nó có thể gây gián đoạn vì nhiều gói tin có thể bị loại bỏ bởi mạng trước khi tắc nghẽn được kiểm soát. Hơn nữa, chính vào những thời điểm mạng bị tắc nghẽn—tức là, tài nguyên trở nên khan hiếm so với nhu cầu—thì nhu cầu phân bổ tài nguyên giữa các người dùng cạnh tranh càng trở nên cấp thiết. Cũng có những giải pháp ở giữa, trong đó các quyết định phân bổ không chính xác được đưa ra, nhưng tắc nghẽn vẫn có thể xảy ra và do đó vẫn cần một cơ chế để xử lý nó. Việc bạn gọi một giải pháp hỗn hợp như vậy là kiểm soát tắc nghẽn hay phân bổ tài nguyên thực ra không quan trọng. Ở một khía cạnh nào đó, nó là cả hai.

Kiểm soát tắc nghẽn và phân bổ tài nguyên liên quan đến cả các máy chủ và các thành phần mạng như bộ định tuyến. Trong các thành phần mạng, có thể sử dụng nhiều kỷ luật xếp hàng khác nhau để kiểm soát thứ tự các gói tin được truyền đi và gói nào sẽ bị loại bỏ. Kỷ luật xếp hàng cũng có thể phân tách lưu lượng để giữ cho các gói tin của một người dùng không ảnh hưởng quá mức đến các gói tin của người dùng khác. Ở các máy chủ đầu cuối, cơ chế kiểm soát tắc nghẽn điều chỉnh tốc độ mà các nguồn phát được phép gửi gói tin. Điều này được thực hiện nhằm tránh để tắc nghẽn xảy ra ngay từ đầu và, nếu nó xảy ra, giúp loại bỏ tắc nghẽn.

Chương này bắt đầu với tổng quan về kiểm soát tắc nghẽn và phân bổ tài nguyên. Sau đó, chúng ta sẽ thảo luận về các kỷ luật xếp hàng khác nhau có thể được triển khai trên các bộ định tuyến bên trong mạng, tiếp theo là mô tả thuật toán kiểm soát tắc nghẽn do TCP cung cấp trên các máy chủ. Phần thứ tư khám phá các kỹ thuật khác nhau liên quan đến cả bộ định tuyến và máy chủ nhằm tránh tắc nghẽn trước khi nó trở thành vấn đề. Cuối cùng, chúng ta sẽ xem xét lĩnh vực rộng lớn về *chất lượng dịch vụ*. Chúng ta sẽ xem xét nhu cầu của các ứng dụng về việc nhận các mức phân bổ tài nguyên khác nhau trong mạng và mô tả một số cách mà chúng có thể yêu cầu các tài nguyên này cũng như mạng có thể đáp ứng các yêu cầu đó.
